import{_ as i,a as l,b as p,c as o,d as c,e as r,f as d,g as u,h as b,i as k,j as v,k as m,l as g,m as h,n as f,o as y,p as _,q as x,r as q,s as w,t as L,u as G,v as E,w as R,x as S}from"./GitLab-Install-25-c2a8d6c7.js";import{_ as N}from"./plugin-vue_export-helper-c27b6911.js";import{r as H,o as z,c as T,a,b as s,d as e,e as t}from"./app-c02eeaf7.js";const I={},A={href:"https://gitlab.com",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},D=a("p",null,"Gitlab 官⽅提供了 N 种安装和部署的⽅式，有直接通过操作系统软件源进⾏安装的，也有通过 Docker ⽅式部署的，还有通过源代码⽅式⾃⾏编译安装的。",-1),O={href:"https://www.debian.org",target:"_blank",rel:"noopener noreferrer"},$=t(`<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>本篇文章的所有命令都是默认你在 <code>root</code> 权限下执行的，如果你没有使用 <code>root</code> 请根据情况适当在命令前加上 <code>sudo</code></p><p>本文中所有的涉及破解，激活的相关内容都是出于研究和学习的目的。请勿用于商业用途！如有需要请购买正版。</p><p>非常建议你在一个可以正常访问 Google 的机器上编译安装 GitLab</p><h2 id="准备环境" tabindex="-1"><a class="header-anchor" href="#准备环境" aria-hidden="true">#</a> 准备环境</h2><ul><li>安装 Debian 12<br><s>这步我就不用说了吧</s></li><li>安装 GitLab 相关依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">sudo</span> build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libre2-dev libreadline-dev libncurses5-dev libffi-dev <span class="token function">curl</span> openssh-server libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev libkrb5-dev <span class="token function">logrotate</span> <span class="token function">rsync</span> python3-docutils pkg-config cmake runit-systemd libcurl4-openssl-dev libexpat1-dev gettext libz-dev libssl-dev libpcre2-dev build-essential git-core graphicsmagick postfix libimage-exiftool-perl ruby ruby-dev golang <span class="token function">npm</span> postgresql postgresql-client libpq-dev postgresql-contrib redis-server nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在安装过程中需要配置 <code>postfix</code></p><figure><img src="`+i+'" alt="配置postfix 1" tabindex="0" loading="lazy"><figcaption>配置postfix 1</figcaption></figure><p>选择<code>Internet Site</code>然后按<code>Enter</code>输入域名</p><figure><img src="'+l+'" alt="配置postfix 2" tabindex="0" loading="lazy"><figcaption>配置postfix 2</figcaption></figure><p>然后就是等待安装完成了</p><figure><img src="'+p+`" alt="安装完成" tabindex="0" loading="lazy"><figcaption>安装完成</figcaption></figure><p>在安装上面的东西之后还需要安装 <code>yarn</code> 用来编译 GitLab 前端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--global</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="编译-gitaly" tabindex="-1"><a class="header-anchor" href="#编译-gitaly" aria-hidden="true">#</a> 编译 Gitaly</h2><p>克隆 <code>Gitaly</code> 仓库并编译 <code>Git</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitlab.com/gitlab-org/gitaly.git /tmp/gitaly
<span class="token builtin class-name">cd</span> /tmp/gitaly
<span class="token function">make</span> <span class="token function">git</span> <span class="token assign-left variable">GIT_PREFIX</span><span class="token operator">=</span>/usr/local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="编译 Gitaly" tabindex="0" loading="lazy"><figcaption>编译 Gitaly</figcaption></figure><p>给 <code>GitLab</code> 创建一个 <code>git</code> 用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser --disabled-login <span class="token parameter variable">--gecos</span> <span class="token string">&#39;GitLab&#39;</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用下面的命令给 <code>GitLab</code> 初始化数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres psql <span class="token parameter variable">-d</span> template1 <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE USER git CREATEDB;&quot;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres psql <span class="token parameter variable">-d</span> template1 <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE EXTENSION IF NOT EXISTS pg_trgm;&quot;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres psql <span class="token parameter variable">-d</span> template1 <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE EXTENSION IF NOT EXISTS btree_gist;&quot;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres psql <span class="token parameter variable">-d</span> template1 <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE EXTENSION IF NOT EXISTS plpgsql;&quot;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres psql <span class="token parameter variable">-d</span> template1 <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE DATABASE gitlabhq_production OWNER git;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置-redis" tabindex="-1"><a class="header-anchor" href="#配置-redis" aria-hidden="true">#</a> 配置 Redis</h2><p>使用下面的命令配置 <code>Redis</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> /etc/redis/redis.conf /etc/redis/redis.conf.orig
<span class="token function">sed</span> <span class="token string">&#39;s/^port .*/port 0/&#39;</span> /etc/redis/redis.conf.orig <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/redis/redis.conf
<span class="token builtin class-name">echo</span> <span class="token string">&#39;unixsocket /var/run/redis/redis.sock&#39;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/redis/redis.conf
<span class="token builtin class-name">echo</span> <span class="token string">&#39;unixsocketperm 770&#39;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/redis/redis.conf
<span class="token function">usermod</span> <span class="token parameter variable">-aG</span> redis <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用下面的命令检查 <code>Redis</code> 的状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl show <span class="token parameter variable">--value</span> <span class="token parameter variable">--property</span><span class="token operator">=</span>Type redis-server.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果输出为 <code>notify</code> 则直接执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30),X={href:"https://docs.gitlab.com/ee/install/installation.html#supervise-redis-with-systemd",target:"_blank",rel:"noopener noreferrer"},F=t(`<h2 id="编译-gitlab-本体" tabindex="-1"><a class="header-anchor" href="#编译-gitlab-本体" aria-hidden="true">#</a> 编译 GitLab 本体</h2><p>创建文件夹并赋予 <code>git</code> 用户权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /opt/gitlab
<span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token function">git</span> /opt/gitlab
<span class="token builtin class-name">cd</span> /opt/gitlab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="克隆-gitlab-源代码" tabindex="-1"><a class="header-anchor" href="#克隆-gitlab-源代码" aria-hidden="true">#</a> 克隆 GitLab 源代码</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">git</span> clone https://gitlab.com/gitlab-org/gitlab.git gitlab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入 <code>GitLab</code> 目录编辑配置文件<br> 你需要修改 <code>config/gitlab.yml</code> 里的 <code>host</code> <code>port</code> <code>https</code><br> 将 <code>localhost</code> 替换为你的域名，将默认 <code>git</code> 仓库目录修改为你将要使用的目录<br> 将 UnixSocket 文件位置和 <code>gitlab_shell</code> 目录位置修改为如图所示。<br> 以及 <code>git</code> 的 <code>bin_path</code><br> 相关图片在下面</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/gitlab/gitlab
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/gitlab.yml.example config/gitlab.yml
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor config/gitlab.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+'" alt="第一处修改" loading="lazy"><br><img src="'+r+'" alt="第二处修改" loading="lazy"><br><img src="'+d+'" alt="第三处修改" loading="lazy"><br><img src="'+u+'" alt="第四处修改" loading="lazy"><br><img src="'+b+'" alt="第五处修改" loading="lazy"><br><img src="'+k+`" alt="第六处修改" loading="lazy"></p><h3 id="配置-gitlab" tabindex="-1"><a class="header-anchor" href="#配置-gitlab" aria-hidden="true">#</a> 配置 GitLab</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/secrets.yml.example config/secrets.yml
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">chmod</span> 0600 config/secrets.yml
<span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token function">git</span> log/
<span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token function">git</span> tmp/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX,go-w log/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX tmp/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX tmp/pids/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX tmp/sockets/
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> public/uploads/
<span class="token function">chmod</span> 0700 public/uploads
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX builds/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX shared/artifacts/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> ug+rwX shared/pages/
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/puma.rb.example config/puma.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-puma" tabindex="-1"><a class="header-anchor" href="#配置-puma" aria-hidden="true">#</a> 配置 puma</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor config/puma.rb
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/resque.yml.example config/resque.yml
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/cable.yml.example config/cable.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你需要将配置文件里的一些文件目录位置进行一些修改<br> 具体细节请看下图</p><p><img src="`+v+'" alt="puma 修改1" loading="lazy"><br><img src="'+m+`" alt="puma 修改2" loading="lazy"></p><h3 id="配置-redis-1" tabindex="-1"><a class="header-anchor" href="#配置-redis-1" aria-hidden="true">#</a> 配置 Redis</h3><p>一般来说这个不用修改。如果你使用的是默认的 Debian / Ubuntu 配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor config/resque.yml config/cable.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修改数据库配置文件" tabindex="-1"><a class="header-anchor" href="#修改数据库配置文件" aria-hidden="true">#</a> 修改数据库配置文件</h3><p>从 <code>config/database.yml</code> 中移除 <code>host</code> <code>username</code> <code>password</code> 这几行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token function">cp</span> config/database.yml.postgresql config/database.yml
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor config/database.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>移除之后，它大概长这样：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">production</span><span class="token punctuation">:</span>
  <span class="token key atrule">main</span><span class="token punctuation">:</span>
    <span class="token key atrule">adapter</span><span class="token punctuation">:</span> postgresql
    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> unicode
    <span class="token key atrule">database</span><span class="token punctuation">:</span> gitlabhq_production
  <span class="token key atrule">ci</span><span class="token punctuation">:</span>
    <span class="token key atrule">adapter</span><span class="token punctuation">:</span> postgresql
    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> unicode
    <span class="token key atrule">database</span><span class="token punctuation">:</span> gitlabhq_production
    <span class="token key atrule">database_tasks</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">geo</span><span class="token punctuation">:</span>
    <span class="token key atrule">adapter</span><span class="token punctuation">:</span> postgresql
    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> unicode
    <span class="token key atrule">database</span><span class="token punctuation">:</span> gitlabhq_geo_production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里还有图</p><figure><img src="`+g+`" alt="修改数据库配置文件" tabindex="0" loading="lazy"><figcaption>修改数据库配置文件</figcaption></figure><h3 id="安装-bundler-并使用-bundler-安装依赖" tabindex="-1"><a class="header-anchor" href="#安装-bundler-并使用-bundler-安装依赖" aria-hidden="true">#</a> 安装 bundler 并使用 bundler 安装依赖</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor config/database.yml
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">chmod</span> o-rwx config/database.yml
gem <span class="token function">install</span> bundler
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle config <span class="token builtin class-name">set</span> <span class="token parameter variable">--local</span> deployment <span class="token string">&#39;true&#39;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle config <span class="token builtin class-name">set</span> <span class="token parameter variable">--local</span> without <span class="token string">&#39;development test mysql aws kerberos&#39;</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle config path /opt/gitlab/gitlab/vendor/bundle
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-gitlab-shell" tabindex="-1"><a class="header-anchor" href="#安装-gitlab-shell" aria-hidden="true">#</a> 安装 GitLab Shell</h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p>进行此步必须要有能访问 Google 的网络<br> 否则 golang 无法完成下载</p></div><p>使用 <code>curl</code> 来检测网络</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-iv</span> https://www.google.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若出现类似图中的输出则说明网络畅通可以进行这步</p><p><img src="`+h+'" alt="网络测试" loading="lazy"><br><img src="'+f+`" alt="网络测试" loading="lazy"></p><p>安装 GitLab Shell<br> 成功示例如图</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:shell:install <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+y+`" alt="安装 GitLab Shell" tabindex="0" loading="lazy"><figcaption>安装 GitLab Shell</figcaption></figure><h3 id="编辑-gitlab-shell-配置文件" tabindex="-1"><a class="header-anchor" href="#编辑-gitlab-shell-配置文件" aria-hidden="true">#</a> 编辑 GitLab Shell 配置文件</h3><p>将里面的 <code>gitlab_url</code> 修改为你的域名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> editor /opt/gitlab/gitlab-shell/config.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-gitlab-企业版功能" tabindex="-1"><a class="header-anchor" href="#安装-gitlab-企业版功能" aria-hidden="true">#</a> 安装 GitLab 企业版功能</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake <span class="token string">&quot;gitlab:workhorse:install[/opt/gitlab/gitlab-workhorse]&quot;</span> <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake <span class="token string">&quot;gitlab:indexer:install[/opt/gitlab/gitlab-elasticsearch-indexer]&quot;</span> <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-gitlab-pages" tabindex="-1"><a class="header-anchor" href="#安装-gitlab-pages" aria-hidden="true">#</a> 安装 GitLab Pages</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/gitlab
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">git</span> clone https://gitlab.com/gitlab-org/gitlab-pages.git
<span class="token builtin class-name">cd</span> gitlab-pages
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-gitaly" tabindex="-1"><a class="header-anchor" href="#安装-gitaly" aria-hidden="true">#</a> 安装 Gitaly</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/gitlab/gitlab
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake <span class="token string">&quot;gitlab:gitaly:install[/opt/gitlab/gitaly,/opt/gitlab/repositories]&quot;</span> <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
<span class="token function">chmod</span> 0700 /opt/gitlab/gitlab/tmp/sockets/private
<span class="token function">chown</span> <span class="token function">git</span> /opt/gitlab/gitlab/tmp/sockets/private
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装服务" tabindex="-1"><a class="header-anchor" href="#安装服务" aria-hidden="true">#</a> 安装服务</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/gitlab/gitlab
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/lib/systemd/system
<span class="token function">cp</span> lib/support/systemd/* /usr/local/lib/systemd/system/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里需要把配置文件做一些调整<br> 将下面两行添加到下面两个文件的 <code>[Unit]</code> 中<br><code>Wants=redis-server.service postgresql.service</code><br><code>After=redis-server.service postgresql.service</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nano</span> /usr/local/lib/systemd/system/gitlab-puma.service
<span class="token function">nano</span> /usr/local/lib/systemd/system/gitlab-sidekiq.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>你还需编辑 <code>/usr/local/lib/systemd/system/</code> 目录中的所有 <code>servise</code> 文件，将错误的目录修复</p><figure><img src="`+_+`" alt="编辑配置文件" tabindex="0" loading="lazy"><figcaption>编辑配置文件</figcaption></figure><p>然后执行一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 <code>Gitaly</code> 配置文件<br> 将里面的 <code>path = &quot;/opt/gitlab/repositories&quot;</code> 改为 <code>path = &quot;/Data/git/repositories&quot;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nano</span> /opt/gitlab/gitaly/config.toml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后执行一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> gitlab.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置-logrotate" tabindex="-1"><a class="header-anchor" href="#设置-logrotate" aria-hidden="true">#</a> 设置 Logrotate</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> lib/support/logrotate/gitlab /etc/logrotate.d/gitlab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="启动-gitaly" tabindex="-1"><a class="header-anchor" href="#启动-gitaly" aria-hidden="true">#</a> 启动 Gitaly</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start gitlab-gitaly.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="初始化数据库并激活高级功能" tabindex="-1"><a class="header-anchor" href="#初始化数据库并激活高级功能" aria-hidden="true">#</a> 初始化数据库并激活高级功能</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/gitlab/gitlab
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:setup <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检查运行状态" tabindex="-1"><a class="header-anchor" href="#检查运行状态" aria-hidden="true">#</a> 检查运行状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:env:info <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="编译-assets" tabindex="-1"><a class="header-anchor" href="#编译-assets" aria-hidden="true">#</a> 编译 Assets</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> <span class="token function">yarn</span> <span class="token function">install</span> <span class="token parameter variable">--production</span> --pure-lockfile
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:assets:compile <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果失败并出现 JavaScript 堆内存不足错误，请尝试运行如下命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:assets:compile <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production <span class="token assign-left variable">NODE_OPTIONS</span><span class="token operator">=</span><span class="token string">&quot;--max_old_space_size=4096&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gitlab-启动" tabindex="-1"><a class="header-anchor" href="#gitlab-启动" aria-hidden="true">#</a> GitLab 启动！</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start gitlab.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="nginx-配置" tabindex="-1"><a class="header-anchor" href="#nginx-配置" aria-hidden="true">#</a> Nginx 配置</h2><p>编辑 <code>gitlab-ssl</code> 文件，编辑 unixsocket 路径，替换 <code>YOUR_SERVER_FQDN</code> 为你的域名，移除 <code>default_server</code> 。配置好证书位置<br> 注意运行 <code>nginx</code> 的用户，要能访问 <code>GitLab</code> 的 unixsocket ，不然会 403</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> lib/support/nginx/gitlab-ssl /etc/nginx/sites-available/gitlab-ssl
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /etc/nginx/sites-available/gitlab-ssl /etc/nginx/sites-enabled/gitlab-ssl
<span class="token function">nano</span> /etc/nginx/sites-available/gitlab-ssl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+x+'" alt="Nginx 配置1" loading="lazy"><br><img src="'+q+'" alt="Nginx 配置2" loading="lazy"><br><img src="'+w+`" alt="Nginx 配置3" loading="lazy"></p><p>重启 <code>nginx</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="仔细检查应用程序状态" tabindex="-1"><a class="header-anchor" href="#仔细检查应用程序状态" aria-hidden="true">#</a> 仔细检查应用程序状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> <span class="token function">git</span> <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake gitlab:check <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="初始化登录" tabindex="-1"><a class="header-anchor" href="#初始化登录" aria-hidden="true">#</a> 初始化登录</h2><p>访问之前设置的域名，<code>GitLab</code> 会要求你设置 <code>root</code> 密码</p><figure><img src="`+L+'" alt="初始化登录" tabindex="0" loading="lazy"><figcaption>初始化登录</figcaption></figure><p>设置密码登录后就看到 <code>GitLab</code> 的界面了<br> 这时 <code>GitLab</code> 还没有激活，语言也是英语</p><figure><img src="'+G+'" alt="GitLab 界面" tabindex="0" loading="lazy"><figcaption>GitLab 界面</figcaption></figure><p>点用户头像，点 <code>Preferences</code> 找到 <code>Localization</code> 选择中文</p><figure><img src="'+E+`" alt="GitLab 语言设置" tabindex="0" loading="lazy"><figcaption>GitLab 语言设置</figcaption></figure><h2 id="激活-gitlab" tabindex="-1"><a class="header-anchor" href="#激活-gitlab" aria-hidden="true">#</a> 激活 GitLab</h2><p>将下面的脚本写入 <code>license.rb</code> 进行适当修改，如用户名之类的</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&quot;openssl&quot;</span></span>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&quot;gitlab/license&quot;</span></span>
key_pair <span class="token operator">=</span> OpenSSL<span class="token double-colon punctuation">::</span>PKey<span class="token double-colon punctuation">::</span><span class="token constant">RSA</span><span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span>
<span class="token builtin">File</span><span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;license_key&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;w&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">|</span>f<span class="token operator">|</span> f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>key_pair<span class="token punctuation">.</span>to_pem<span class="token punctuation">)</span> <span class="token punctuation">}</span>
public_key <span class="token operator">=</span> key_pair<span class="token punctuation">.</span>public_key
<span class="token builtin">File</span><span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;license_key.pub&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;w&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">|</span>f<span class="token operator">|</span> f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>public_key<span class="token punctuation">.</span>to_pem<span class="token punctuation">)</span> <span class="token punctuation">}</span>
private_key <span class="token operator">=</span> OpenSSL<span class="token double-colon punctuation">::</span>PKey<span class="token double-colon punctuation">::</span><span class="token class-name">RSA</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token builtin">File</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;license_key&quot;</span></span><span class="token punctuation">)</span>
Gitlab<span class="token double-colon punctuation">::</span>License<span class="token punctuation">.</span>encryption_key <span class="token operator">=</span> private_key
license <span class="token operator">=</span> Gitlab<span class="token double-colon punctuation">::</span><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token keyword">new</span>
license<span class="token punctuation">.</span>licensee <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token string-literal"><span class="token string">&quot;Name&quot;</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">&quot;none&quot;</span></span><span class="token punctuation">,</span>
<span class="token string-literal"><span class="token string">&quot;Company&quot;</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">&quot;none&quot;</span></span><span class="token punctuation">,</span>
<span class="token string-literal"><span class="token string">&quot;Email&quot;</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">&quot;example@test.com&quot;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
license<span class="token punctuation">.</span>starts_at <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 开始时间</span>
license<span class="token punctuation">.</span>expires_at <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2050</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 结束时间</span>
license<span class="token punctuation">.</span>notify_admins_at <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2049</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
license<span class="token punctuation">.</span>notify_users_at <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2049</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
license<span class="token punctuation">.</span>block_changes_at <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2050</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
license<span class="token punctuation">.</span>restrictions <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token symbol">active_user_count</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
puts <span class="token string-literal"><span class="token string">&quot;License:&quot;</span></span>
puts license
data <span class="token operator">=</span> license<span class="token punctuation">.</span>export
puts <span class="token string-literal"><span class="token string">&quot;Exported license:&quot;</span></span>
puts data
<span class="token builtin">File</span><span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;GitLabBV.gitlab-license&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;w&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">|</span>f<span class="token operator">|</span> f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">}</span>
public_key <span class="token operator">=</span> OpenSSL<span class="token double-colon punctuation">::</span>PKey<span class="token double-colon punctuation">::</span><span class="token class-name">RSA</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token builtin">File</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;license_key.pub&quot;</span></span><span class="token punctuation">)</span>
Gitlab<span class="token double-colon punctuation">::</span>License<span class="token punctuation">.</span>encryption_key <span class="token operator">=</span> public_key
data <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;GitLabBV.gitlab-license&quot;</span></span><span class="token punctuation">)</span>
<span class="token variable">$license</span> <span class="token operator">=</span> Gitlab<span class="token double-colon punctuation">::</span>License<span class="token punctuation">.</span>import<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
puts <span class="token string-literal"><span class="token string">&quot;Imported license:&quot;</span></span>
puts <span class="token variable">$license</span>
<span class="token keyword">unless</span> <span class="token variable">$license</span>
<span class="token keyword">raise</span> <span class="token string-literal"><span class="token string">&quot;The license is invalid.&quot;</span></span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token variable">$license</span><span class="token punctuation">.</span>restricted<span class="token operator">?</span><span class="token punctuation">(</span><span class="token symbol">:active_user_count</span><span class="token punctuation">)</span>
active_user_count <span class="token operator">=</span> <span class="token number">10000</span>
<span class="token keyword">if</span> active_user_count <span class="token operator">&gt;</span> <span class="token variable">$license</span><span class="token punctuation">.</span>restrictions<span class="token punctuation">[</span><span class="token symbol">:active_user_count</span><span class="token punctuation">]</span>
    <span class="token keyword">raise</span> <span class="token string-literal"><span class="token string">&quot;The active user count exceeds the allowed amount!&quot;</span></span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token variable">$license</span><span class="token punctuation">.</span>notify_admins<span class="token operator">?</span>
puts <span class="token string-literal"><span class="token string">&quot;The license is due to expire on </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">$license</span><span class="token punctuation">.</span>expires_at</span><span class="token delimiter punctuation">}</span></span><span class="token string">.&quot;</span></span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token variable">$license</span><span class="token punctuation">.</span>notify_users<span class="token operator">?</span>
puts <span class="token string-literal"><span class="token string">&quot;The license is due to expire on </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">$license</span><span class="token punctuation">.</span>expires_at</span><span class="token delimiter punctuation">}</span></span><span class="token string">.&quot;</span></span>
<span class="token keyword">end</span>
<span class="token keyword">module</span> <span class="token class-name">Gitlab</span>
<span class="token keyword">class</span> <span class="token class-name">GitAccess</span>
    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">check</span></span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> changes <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token variable">$license</span><span class="token punctuation">.</span>block_changes<span class="token operator">?</span>
        <span class="token keyword">return</span> build_status_object<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;License expired&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>
puts <span class="token string-literal"><span class="token string">&quot;This instance of GitLab Enterprise Edition is licensed to:&quot;</span></span>
<span class="token variable">$license</span><span class="token punctuation">.</span>licensee<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>key<span class="token punctuation">,</span> value<span class="token operator">|</span>
puts <span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">key</span><span class="token delimiter punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">value</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token variable">$license</span><span class="token punctuation">.</span>expired<span class="token operator">?</span>
puts <span class="token string-literal"><span class="token string">&quot;The license expired on </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">$license</span><span class="token punctuation">.</span>expires_at</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token keyword">elsif</span> <span class="token variable">$license</span><span class="token punctuation">.</span>will_expire<span class="token operator">?</span>
puts <span class="token string-literal"><span class="token string">&quot;The license will expire on </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">$license</span><span class="token punctuation">.</span>expires_at</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token keyword">else</span>
puts <span class="token string-literal"><span class="token string">&quot;The license will never expire.&quot;</span></span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写入 <code>license.rb</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gem <span class="token function">install</span> gitlab-license
<span class="token function">mkdir</span> gitlab-license
<span class="token builtin class-name">cd</span> gitlab-license
<span class="token function">nano</span> license.rb
ruby license.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>备份原先的许可证<br> 再覆盖新的许可证</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> /opt/gitlab/gitlab/.license_encryption_key.pub /opt/gitlab/gitlab/.license_encryption_key.pub.bak
<span class="token function">cp</span> /opt/gitlab/gitlab/gitlab-license/license_key.pub /opt/gitlab/gitlab/.license_encryption_key.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改激活脚本<br> 修改第247行为 <code>restricted_attr(:plan).presence || ULTIMATE_PLAN</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nano</span> /opt/gitlab/gitlab/ee/app/models/license.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启 GitLab</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart gitlab.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,96),B={href:"https://xn--GitLab-on9im33aq1ii33f/admin/application_settings/general",target:"_blank",rel:"noopener noreferrer"},C=a("code",null,"添加许可证",-1),P=a("code",null,"请输入许可证密钥",-1),U=t('<figure><img src="'+R+'" alt="添加许可证" tabindex="0" loading="lazy"><figcaption>添加许可证</figcaption></figure><p>粘贴 <code>/opt/gitlab/gitlab/gitlab-license/GitLabBV.gitlab-license</code> 中的内容进去并勾选 <code>服务条款</code> 点击 <code>添加许可证</code></p><p>激活成功</p><figure><img src="'+S+'" alt="激活成功" tabindex="0" loading="lazy"><figcaption>激活成功</figcaption></figure><p>Enjoy！</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>',6),j={href:"https://docs.gitlab.com/ee/install/installation.html",target:"_blank",rel:"noopener noreferrer"},K={href:"https://zhuanlan.zhihu.com/p/393131933",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.pengtech.net/gitlab/gitlab_ee_crack.html",target:"_blank",rel:"noopener noreferrer"};function M(J,Q){const n=H("ExternalLinkIcon");return z(),T("div",null,[a("p",null,[a("a",A,[s("GitLab"),e(n)]),s(" 是⼀个主要由 Ruby on Rails 语⾔开发的开源应⽤程序，实现⼀个⾃托管的 Git 项⽬仓库，可通过 Web 界面进⾏访问和管理，简⽽⾔之就是⼀个可以私有化部署的 "),a("a",V,[s("GitHub"),e(n)]),s("。")]),D,a("p",null,[s("本篇文章向你讲述如何通过源代码⽅式在 "),a("a",O,[s("Debian 12"),e(n)]),s(" 上编译安装 GitLab 并激活企业版功能")]),$,a("p",null,[s("如果不是则参考 "),a("a",X,[s("GitLab 官方文档"),e(n)])]),F,a("p",null,[s("访问 "),a("a",B,[s("https://你的GitLab域名/admin/application_settings/general"),e(n)]),s(" 点击 "),C,s("，点击 "),P]),U,a("p",null,[a("a",j,[s("GitLab 官方文档"),e(n)])]),a("p",null,[a("a",K,[s("GitLab ARM64源码编译搭建"),e(n)])]),a("p",null,[a("a",W,[s("破解Gitlab EE 15"),e(n)])])])}const sa=N(I,[["render",M],["__file","GitLab-Install.html.vue"]]);export{sa as default};
