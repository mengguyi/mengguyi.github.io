import{_ as i,a}from"./GitLab-Install-Docker-cover-B00Uj4el.js";import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as l,o as t}from"./app-DTCU6s7o.js";const h={};function k(p,s){return t(),e("div",null,s[0]||(s[0]=[l(`<p>本文讲述了如何使用 <a href="https://www.docker.com" target="_blank" rel="noopener noreferrer">Docker</a> 来部署 <a href="https://gitlab.com" target="_blank" rel="noopener noreferrer">GitLab</a></p><p>通过 GitLab 官方提供的文档我们可以很轻松的通过 Docker 安装 GitLab。</p><p>本篇文章向你讲述如何通过源代码⽅式在 <a href="https://www.debian.org" target="_blank" rel="noopener noreferrer">Debian 12</a> 上编译安装 GitLab 并激活企业版功能。</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>本篇文章的所有命令都是默认你在 <code>root</code> 权限下执行的，如果你没有使用 <code>root</code> 请根据情况适当在命令前加上 <code>sudo</code>。</p><p>本文中所有的涉及破解，激活的相关内容都是出于研究和学习的目的。请勿用于商业用途！如有需要请购买正版！</p><p>非常建议你在一个可以正常访问 Google 的机器上安装 GitLab 和 Docker。</p><h2 id="准备环境" tabindex="-1"><a class="header-anchor" href="#准备环境"><span>准备环境</span></a></h2><ul><li>安装 Debian 12<br><s>这步我就不用说了吧</s></li><li>安装 Docker</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/docker/docker-install/master/install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果您在中国大陆可以在执行前加上这句来使用国内镜像加速安装。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> DOWNLOAD_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://mirrors.bfsu.edu.cn/docker-ce&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>更改 SSH 端口</li></ul><p>因为 GitLab 需要使用 22 端口所以我们需要修改服务器的 SSH 端口。（推荐这样做因为不需要在通过 ssh 克隆仓库的时候加上端口号）</p><p>编辑 <code>/etc/ssh/sshd_config</code> 将 <code>Port 22</code> 改为 <code>Port 2222</code> 保存然后执行 <code>systemctl restart ssh</code></p><p>验证一下你是否可以通过新的端口连接服务器。</p><h2 id="开始安装" tabindex="-1"><a class="header-anchor" href="#开始安装"><span>开始安装</span></a></h2><ul><li>创建存放 GitLab 数据的文件夹</li></ul><p>给配置文件，日志，数据库它们找个位置放起来。可以放在很多地方，例如用户根目录或者是系统根目录。</p><p>1.创建目录</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/gitlab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果您使用 root 以外的用户运行 Docker，请向用户授予目录的适当权限。</p><p>2.配置一个新的环境变量 $GITLAB_HOME，和您创建的目录路径一致</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> GITLAB_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gitlab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者，您可以将 <code>GITLAB_HOME</code> 环境变量附加到 shell 的配置文件中，以便将其应用于所有将来的终端会话。</p><p>对于 bash 它的配置文件在 <code>~/.bash_profile</code> ，zsh 的在 <code>~/.zshrc</code>。</p><p>GitLab 容器数据文件夹和主机文件夹的映射关系：</p><table><thead><tr><th>本地路径</th><th>容器内路径</th><th>用途</th></tr></thead><tbody><tr><td><code>$GITLAB_HOME/data</code></td><td>/var/opt/gitlab</td><td>存储应用数据</td></tr><tr><td><code>$GITLAB_HOME/logs</code></td><td>/var/log/gitlab</td><td>存储日志</td></tr><tr><td><code>$GITLAB_HOME/config</code></td><td>/etc/gitlab</td><td>存储GitLab配置文件</td></tr></tbody></table><ul><li>创建 Docker Compose 文件</li></ul><p>创建一个 <code>docker-compose.yml</code> 文件，例如：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;3.6&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  gitlab</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gitlab/gitlab-ee</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gitlab</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">always</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;gitlab.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      GITLAB_OMNIBUS_CONFIG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        # 在这块写其他 gitlab.rb 配置，记得更改默认的 external_url</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        external_url &#39;https://gitlab.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;80:80&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;443:443&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;22:22&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;$GITLAB_HOME/config:/etc/gitlab&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;$GITLAB_HOME/logs:/var/log/gitlab&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;$GITLAB_HOME/data:/var/opt/gitlab&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    shm_size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;256m&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者你还可以使用 Docker Engine 来运行 GitLab 不过这两者是一样的。这里就不再赘述了。<br> 执行</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gitlab</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Password:&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/gitlab/initial_root_password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>获得安装时生成的 root 密码。</p><p>之后访问你设置的 <code>external_url</code> 就可以访问 GitLab 了！</p><figure><img src="`+i+`" alt="安装好图片" tabindex="0" loading="lazy"><figcaption>安装好图片</figcaption></figure><p>输入用户名 root 和你获得的 root 密码点击登录进入 GitLab。</p><h2 id="破解-gitlab" tabindex="-1"><a class="header-anchor" href="#破解-gitlab"><span>破解 GitLab</span></a></h2><ul><li>使用 GitLab-License-Generator 生成许可证</li></ul><p>由于 GitLab-License-Generator 被 DMCA takedown 了，所以我们需要手动运行它：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruby-full</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bundler</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gitlab-license</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/Lakr233/GitLab-License-Generator.git</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GitLab-License-Generator</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编辑 <code>src/scan.features.rb</code> 粘贴以下内容：</p><div class="language-ruby line-numbers-mode" data-highlighter="shiki" data-ext="ruby" data-title="ruby" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env ruby</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># encoding: utf-8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;json&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;optparse&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">OptionParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">new</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">opts</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opts.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">banner</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Usage: scan.features.rb [options]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opts.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-s&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--src-dir PATH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Specify gitlab source dir (required if --features-file is ommited)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">        GITLAB_FEATURES_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">File</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expand_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">(v)</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/ee/app/models/gitlab_subscriptions/features.rb&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opts.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-f&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--features-file PATH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Specify gitlab features path (required if --src-dir is ommited)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">        GITLAB_FEATURES_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expand_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(v)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opts.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-o&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--output PATH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Output to json file (required)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">        EXPORT_JSON_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expand_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(v)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opts.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-h&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--help&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Prints this help&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        puts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> opts</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        exit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.parse!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> GITLAB_FEATURES_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nil?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EXPORT_JSON_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nil?</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[!] missing required options&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[!] use -h for help&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    exit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Reading features from </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">GITLAB_FEATURES_FILE</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ignore_exception</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    begin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      yield</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    rescue</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> Exception</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[*] loading features.rb...&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ignore_exception </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    require_relative </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">GITLAB_FEATURES_FILE</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">ALL_FEATURES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">GitlabSubscriptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">constants</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">each</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">const_name</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[*] gathering features from </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">const_name</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> const_name.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">to_s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">include?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;FEATURE&#39;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        ALL_FEATURES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">GitlabSubscriptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">const_get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(const_name))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[?] unrecognized constant </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">const_name</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ALL_FEATURES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uniq!</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ALL_FEATURES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort_by!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">feature</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> feature }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[*] total features: </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ALL_FEATURES</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[*] writing to </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">#{</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">EXPORT_JSON_FILE</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">EXPORT_JSON_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pretty_generate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">ALL_FEATURES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">puts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;[*] done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成许可证（按需求修改LICENSE变量）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src/scan.features.rb</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Tim Cook&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_COMPANY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Apple Computer, Inc.&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_EMAIL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tcook@apple.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_PLAN</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ultimate&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_USER_COUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2147483647&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LICENSE_EXPIRE_YEAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2500&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./make.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成的许可证在 <code>build</code> 文件夹下。</p><p>要使用的文件有 <code>public.key</code> 和 <code>result.gitlab-license</code>。</p><p>我们要使用生成的 <code>public.key</code> 替换 GitLab 的 <code>.license_encryption_key.pub</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gitlab</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行完下面这行将 public.key 的内容粘贴进去按一下回车就将内容写入 .license_encryption_key.pub 了。按 control + c 退出即可</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gitlab-ctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reconfigure</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gitlab-ctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>result.gitlab-license</code> 的内容粘贴至</p><p><a href="https://xn--GitLab-on9im33aq1ii33f/admin/application_settings/general" target="_blank" rel="noopener noreferrer">https://你的GitLab域名/admin/application_settings/general</a> 点击 Add License 选择 Enter license key 粘贴你 <code>result.gitlab-license</code> 里的内容。</p><p>选择接受 TOS 点击 Add license。</p><p>这时候 GitLab 就成功激活了！</p><figure><img src="`+a+'" alt="激活好图片" tabindex="0" loading="lazy"><figcaption>激活好图片</figcaption></figure><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h2><p><a href="https://docs.gitlab.com/ee/install/installation.html" target="_blank" rel="noopener noreferrer">GitLab 官方文档</a></p><p><a href="https://github.com/Lakr233/GitLab-License-Generator" target="_blank" rel="noopener noreferrer">GitLab-License-Generator</a></p>',59)]))}const c=n(h,[["render",k],["__file","GitLab-Install-Docker.html.vue"]]),o=JSON.parse('{"path":"/articles/GitLab-Install-Docker.html","title":"GitLab EE 17 Docker 安装破解教程","lang":"zh-CN","frontmatter":{"cover":"/assets/images/GitLab-Install-Docker-1.avif","title":"GitLab EE 17 Docker 安装破解教程","icon":"fab fa-gitlab","order":2,"category":["使用指南","教程","网络","破解"],"tag":["GitLab","Linux","Git","Ruby","Docker","Debian"],"description":"本文讲述了如何使用 Docker 来部署 GitLab 通过 GitLab 官方提供的文档我们可以很轻松的通过 Docker 安装 GitLab。 本篇文章向你讲述如何通过源代码⽅式在 Debian 12 上编译安装 GitLab 并激活企业版功能。 说明 本篇文章的所有命令都是默认你在 root 权限下执行的，如果你没有使用 root 请根据情况适当...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://blog.mengguyi.com/en/articles/GitLab-Install-Docker.html"}],["meta",{"property":"og:url","content":"https://blog.mengguyi.com/articles/GitLab-Install-Docker.html"}],["meta",{"property":"og:site_name","content":"孟古一的博客"}],["meta",{"property":"og:title","content":"GitLab EE 17 Docker 安装破解教程"}],["meta",{"property":"og:description","content":"本文讲述了如何使用 Docker 来部署 GitLab 通过 GitLab 官方提供的文档我们可以很轻松的通过 Docker 安装 GitLab。 本篇文章向你讲述如何通过源代码⽅式在 Debian 12 上编译安装 GitLab 并激活企业版功能。 说明 本篇文章的所有命令都是默认你在 root 权限下执行的，如果你没有使用 root 请根据情况适当..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.mengguyi.com/assets/images/GitLab-Install-Docker-1.avif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-25T23:21:02.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://blog.mengguyi.com/assets/images/GitLab-Install-Docker-1.avif"}],["meta",{"name":"twitter:image:alt","content":"GitLab EE 17 Docker 安装破解教程"}],["meta",{"property":"article:tag","content":"GitLab"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"Ruby"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:tag","content":"Debian"}],["meta",{"property":"article:modified_time","content":"2024-12-25T23:21:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GitLab EE 17 Docker 安装破解教程\\",\\"image\\":[\\"https://blog.mengguyi.com/assets/images/GitLab-Install-Docker-1.avif\\",\\"https://blog.mengguyi.com/assets/images/GitLab-Install-Docker-cover.avif\\"],\\"dateModified\\":\\"2024-12-25T23:21:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MengGuyi\\",\\"url\\":\\"https://mengguyi.com\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":2,"title":"准备环境","slug":"准备环境","link":"#准备环境","children":[]},{"level":2,"title":"开始安装","slug":"开始安装","link":"#开始安装","children":[]},{"level":2,"title":"破解 GitLab","slug":"破解-gitlab","link":"#破解-gitlab","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1734103290000,"updatedTime":1735168862000,"contributors":[{"name":"Guyi Meng","username":"Guyi Meng","email":"i@mengguyi.com","commits":3,"url":"https://github.com/Guyi Meng"}]},"readingTime":{"minutes":4.09,"words":1227},"filePathRelative":"articles/GitLab-Install-Docker.md","localizedDate":"2024年12月13日","excerpt":"<p>本文讲述了如何使用 <a href=\\"https://www.docker.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker</a> 来部署 <a href=\\"https://gitlab.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitLab</a></p>\\n<p>通过 GitLab 官方提供的文档我们可以很轻松的通过 Docker 安装 GitLab。</p>\\n<p>本篇文章向你讲述如何通过源代码⽅式在 <a href=\\"https://www.debian.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Debian 12</a> 上编译安装 GitLab 并激活企业版功能。</p>","autoDesc":true}');export{c as comp,o as data};
